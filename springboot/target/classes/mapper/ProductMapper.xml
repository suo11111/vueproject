<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.ProductMapper">
    <select id="selectAll" resultType="com.example.entity.Product">
        select products.*, suppliers.name as supplierName,suppliers.contact as supplierContact from products
        left join suppliers on products.supplier_id = suppliers.id
        <where>
            <if test="productName!=null and productName!=''">
                and products.product_name like concat('%',#{productName},'%')
            </if>
        </where>
        order by products.product_id desc
    </select>
    <insert id="insert" parameterType="com.example.entity.Product">
        insert into `products`(product_name, category, price, stock_quantity,
                               description, supplier_id, sales, margin)
        values (#{productName}, #{category}, #{price}, #{stockQuantity},
                #{description}, #{supplierId},IFNULL(#{sales}, 0), #{margin})
    </insert>
    <update id="updateById" parameterType="com.example.entity.Product">
       update `products` set product_name=#{productName}, category=#{category}, price=#{price},
                             stock_quantity=#{stockQuantity}, description=#{description}, supplier_id=#{supplierId},
                             sales=#{sales}, margin=#{margin}
                         where product_id=#{productId}
    </update>



    <select id="selectByStockQuantity" resultType="com.example.entity.Product">
        select products.*, suppliers.name as supplierName,suppliers.contact as supplierContact from products
        left join suppliers on products.supplier_id = suppliers.id
        <where>
            stock_quantity &lt;= #{stockQuantity}
        </where>
        order by products.product_id desc
    </select>

</mapper>